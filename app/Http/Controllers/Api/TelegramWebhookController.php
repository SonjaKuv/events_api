<?php

namespace App\Http\Controllers\Api;

use App\Http\Controllers\Controller;
use App\Services\TelegramService;
use Illuminate\Http\Request;
use Illuminate\Http\JsonResponse;
use Illuminate\Support\Facades\Log;

class TelegramWebhookController extends Controller
{
    private TelegramService $telegramService;

    public function __construct(TelegramService $telegramService)
    {
        $this->telegramService = $telegramService;
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å webhook –æ—Ç Telegram
     */
    public function handle(Request $request): JsonResponse
    {
        try {
            $update = $request->all();
            
            // –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–∏–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            Log::info('Telegram webhook received', $update);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if (!isset($update['message'])) {
                return response()->json(['ok' => true]);
            }

            $message = $update['message'];
            $chatId = $message['chat']['id'];
            $text = $message['text'] ?? '';
            $from = $message['from'];

            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
            if (str_starts_with($text, '/')) {
                $this->handleCommand($chatId, $text, $from);
            }

            return response()->json(['ok' => true]);

        } catch (\Exception $e) {
            Log::error('Telegram webhook error', [
                'error' => $e->getMessage(),
                'request' => $request->all()
            ]);
            
            return response()->json(['ok' => false], 500);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É
     */
    private function handleCommand(string $chatId, string $text, array $from): void
    {
        $parts = explode(' ', $text);
        $command = $parts[0];

        switch ($command) {
            case '/start':
                $this->handleStartCommand($chatId, $from);
                break;
                
            case '/link':
                $code = $parts[1] ?? null;
                $this->handleLinkCommand($chatId, $code, $from);
                break;
                
            case '/help':
                $this->handleHelpCommand($chatId);
                break;
                
            default:
                $this->handleUnknownCommand($chatId);
                break;
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /start
     */
    private function handleStartCommand(string $chatId, array $from): void
    {
        $firstName = $from['first_name'] ?? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
        
        $message = "üëã –ü—Ä–∏–≤–µ—Ç, {$firstName}!\n\n";
        $message .= "–≠—Ç–æ –±–æ—Ç –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å–æ–±—ã—Ç–∏—è—Ö.\n\n";
        $message .= "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n";
        $message .= "/link [–∫–æ–¥] - –ø—Ä–∏–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç\n";
        $message .= "/help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n\n";
        $message .= "–î–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—É—á–∏—Ç–µ –∫–æ–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /link [–∫–æ–¥]";

        $this->telegramService->sendMessage($chatId, $message);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /link
     */
    private function handleLinkCommand(string $chatId, ?string $code, array $from): void
    {
        if (!$code) {
            $this->telegramService->sendMessage(
                $chatId,
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /link [–∫–æ–¥]\n\n–ü–æ–ª—É—á–∏—Ç–µ –∫–æ–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
            );
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ –≤ –∫—ç—à–µ
        $userId = cache()->get("telegram_link_{$code}");
        if (!$userId) {
            $this->telegramService->sendMessage(
                $chatId,
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –∏—Å—Ç–µ–∫—à–∏–π –∫–æ–¥.\n\n–ü–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤—ã–π –∫–æ–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
            );
            return;
        }

        // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç
        $user = \App\Models\User::find($userId);
        if (!$user) {
            $this->telegramService->sendMessage($chatId, "‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.");
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –ª–∏ —É–∂–µ —ç—Ç–æ—Ç Telegram –∞–∫–∫–∞—É–Ω—Ç
        $existingUser = \App\Models\User::where('telegram_id', $chatId)->first();
        if ($existingUser && $existingUser->id !== $user->id) {
            $this->telegramService->sendMessage(
                $chatId,
                "‚ùå –≠—Ç–æ—Ç Telegram –∞–∫–∫–∞—É–Ω—Ç —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."
            );
            return;
        }

        // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç
        $user->update(['telegram_id' => $chatId]);
        
        // –£–¥–∞–ª—è–µ–º –∫–æ–¥ –∏–∑ –∫—ç—à–∞
        cache()->forget("telegram_link_{$code}");

        $this->telegramService->sendMessage(
            $chatId,
            "‚úÖ <b>–ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω!</b>\n\n–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–∞—à–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö."
        );
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /help
     */
    private function handleHelpCommand(string $chatId): void
    {
        $message = "üìñ <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:</b>\n\n";
        $message .= "/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n";
        $message .= "/link [–∫–æ–¥] - –ø—Ä–∏–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç –∫ Telegram\n";
        $message .= "/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n";
        $message .= "üîó <b>–ö–∞–∫ –ø—Ä–∏–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç:</b>\n";
        $message .= "1. –í–æ–π–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n";
        $message .= "2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram\n";
        $message .= "3. –ù–∞–∂–º–∏—Ç–µ '–ü–æ–ª—É—á–∏—Ç—å –∫–æ–¥'\n";
        $message .= "4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /link [–ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥]\n\n";
        $message .= "–ü–æ—Å–ª–µ –ø—Ä–∏–≤—è–∑–∫–∏ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–∞—à–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö –∑–∞ —á–∞—Å –¥–æ –Ω–∞—á–∞–ª–∞.";

        $this->telegramService->sendMessage($chatId, $message);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É
     */
    private function handleUnknownCommand(string $chatId): void
    {
        $this->telegramService->sendMessage(
            $chatId,
            "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."
        );
    }
} 
